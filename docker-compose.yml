version: '3.8'

services:
  postgres:
    image: postgres:15-alpine
    container_name: marketing-machine-db
    environment:
      POSTGRES_DB: marketing_machine
      POSTGRES_USER: mm_user
      POSTGRES_PASSWORD: secure_password_change_in_production
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./database/init.sql:/docker-entrypoint-initdb.d/init.sql
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U mm_user -d marketing_machine"]
      interval: 30s
      timeout: 10s
      retries: 3

  redis:
    image: redis:7-alpine
    container_name: marketing-machine-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    command: redis-server --appendonly yes
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3

  backend:
    build:
      context: .
      dockerfile: docker/Dockerfile.backend
    container_name: marketing-machine-backend
    ports:
      - "3001:3001"
      - "3002:3002"  # Webhook server
    environment:
      NODE_ENV: development
      DATABASE_URL: postgresql://mm_user:secure_password_change_in_production@postgres:5432/marketing_machine
      REDIS_URL: redis://redis:6379
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    volumes:
      - ./backend:/app/backend
      - /app/backend/node_modules
    command: npm run dev

  frontend:
    build:
      context: .
      dockerfile: docker/Dockerfile.frontend
    container_name: marketing-machine-frontend
    ports:
      - "5173:5173"
    environment:
      VITE_API_URL: http://localhost:3001
    depends_on:
      - backend
    volumes:
      - ./frontend:/app/frontend
      - /app/frontend/node_modules
    command: npm run dev

volumes:
  postgres_data:
  redis_data:

networks:
  default:
    name: marketing-machine-network